package carton-wasm:lib

interface types {
    enum dtype {
        f32,
        f64,
        i8,
        i16,
        i32,
        i64,
        ui8,
        ui16,
        ui32,
        ui64,
    }
    record tensor-numeric {
        buffer: list<u8>,
        dtype: dtype,
        shape: list<u64>,
    }
    record tensor-string {
        buffer: list<string>,
        shape: list<u64>,
    }
    variant tensor {
        numeric(tensor-numeric),
        str(tensor-string),
    }
}

world model {
    use types.{tensor, tensor-numeric, tensor-string, dtype};
    export infer: func(in: list<tuple<string, tensor>>) -> result<list<tuple<string, tensor>>, string>;
}