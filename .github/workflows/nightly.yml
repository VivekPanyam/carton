name: Runner Releases

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  runner_release_native:
    name: Native Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # For now, don't run macos builds during nightly builds.
          # TODO: reenable this when the repo is public
          # - os: macos-latest
          #   target: x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ZIPFS_READ }}
          submodules: recursive
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --release --verbose --target ${{ matrix.target }}
      - run: cargo test --release --verbose --target ${{ matrix.target }}
      - name: Build runners
        run: rm -rf /tmp/runner_releases && mkdir -p /tmp/runner_releases && cargo run --release  --target ${{ matrix.target }} -p carton-runner-py --bin build_releases -- --output-path /tmp/runner_releases
      - name: Upload runners
        uses: actions/upload-artifact@v3
        with:
          name: runners-${{ matrix.target }}
          path: /tmp/runner_releases
  runner_release_aarch64:
    name: "Native Build aarch64"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ZIPFS_READ }}
          submodules: recursive
      - run: pip3 install gql[requests]
      - name: Wait for Cirrus CI builds to finish
        run: python3 ci/trigger_cirrus_build.py
        env:
          CIRRUS_AUTH: ${{ secrets.CIRRUS_AUTH }}
      - name: Upload runners
        uses: actions/upload-artifact@v3
        with:
          name: runners-aarch64
          path: /tmp/runner_releases

  upload_nightly_builds:
    name: "Upload nightly builds"
    needs: [runner_release_native, runner_release_aarch64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ZIPFS_READ }}
          submodules: recursive
      - run: mkdir /tmp/artifacts
      - uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts
      - name: Upload artifacts and generate config
        run: cargo run --package carton-runner-packager --bin ci_upload_releases
        env:
          NIGHTLY_REPO_TOKEN: ${{ secrets.NIGHTLY_REPO_TOKEN }}
          CARTON_NIGHTLY_S3_BUCKET: ${{ vars.CARTON_NIGHTLY_S3_BUCKET }}
          CARTON_NIGHTLY_S3_REGION: ${{ vars.CARTON_NIGHTLY_S3_REGION }}
          CARTON_NIGHTLY_S3_ENDPOINT: ${{ secrets.CARTON_NIGHTLY_S3_ENDPOINT }}
          CARTON_NIGHTLY_ACCESS_KEY_ID: ${{ secrets.CARTON_NIGHTLY_ACCESS_KEY_ID }}
          CARTON_NIGHTLY_SECRET_ACCESS_KEY: ${{ secrets.CARTON_NIGHTLY_SECRET_ACCESS_KEY }}