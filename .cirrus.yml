only_if: $CIRRUS_TAG == '' && ($CIRRUS_PR != '' || $CIRRUS_BRANCH == 'main')

env:
  CARGO_TERM_COLOR: always
  CIRRUS_REPO_CLONE_TOKEN: ENCRYPTED[dd171eb99e384bce7789885bbe284ef3b59ae7aa37956f1c03d54074b064055d3754842f9688e4d494d01e8229a3e9eb]
  # This defaults to /tmp which causes CrossesDevices errors when we try to rename temp files
  CIRRUS_VOLUME: /something

linux_task:
  name: Native Build aarch64-unknown-linux-gnu
  only_if: $CIRRUS_CRON != 'nightly'
  arm_container:
    dockerfile: ci/cirrus_ci.dockerfile
    cpu: 8
    memory: 32G
  submodules_script:
    # Init submodules
    - git -c url."https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/".insteadOf="git@github.com:" submodule update --init --recursive
  target_cache:
    folder: target
    fingerprint_script:
      - rustc --version
      - cat Cargo.lock
  build_and_test_script:
    - cargo build --verbose --target aarch64-unknown-linux-gnu
    - cargo test --verbose --target aarch64-unknown-linux-gnu
  before_cache_script: rm -rf $CARGO_HOME/registry/index

macos_task:
  only_if: $CIRRUS_CRON != 'nightly'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.2
  matrix:
    - name: Native Build aarch64-apple-darwin
      env:
        TARGET: aarch64-apple-darwin
    - name: Native Build x86_64-apple-darwin
      env:
        TARGET: x86_64-apple-darwin
  submodules_script:
    # Init submodules
    - git -c url."https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/".insteadOf="git@github.com:" submodule update --init --recursive
  symlink_xcode_script:
    - ln -s /Applications/Xcode-14.2.0.app /Applications/Xcode.app
    - ls -alh /Applications/
  setup_script:
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable-$TARGET
  build_and_test_script:
    - source $HOME/.cargo/env
    - cargo build --verbose --target $TARGET
    - cargo test --verbose --target $TARGET



# Nightly release builds
nightly_linux_task:
  name: Nightly Release Build aarch64-unknown-linux-gnu
  alias: nightly_linux
  only_if: $CIRRUS_CRON == 'nightly'
  arm_container:
    dockerfile: ci/cirrus_ci.dockerfile
    cpu: 8
    memory: 32G
  submodules_script:
    # Init submodules
    - git -c url."https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/".insteadOf="git@github.com:" submodule update --init --recursive
  target_cache:
    folder: target
    fingerprint_script:
      - rustc --version
      - echo "nightly"
      - cat Cargo.lock
  build_and_test_script:
    - cargo build --release --verbose --target aarch64-unknown-linux-gnu
    - cargo test --release --verbose --target aarch64-unknown-linux-gnu
    - rm -rf $CIRRUS_WORKING_DIR/runner_releases && mkdir -p $CIRRUS_WORKING_DIR/runner_releases && cargo run --release --target aarch64-unknown-linux-gnu -p carton-runner-py --bin build_releases -- --output-path $CIRRUS_WORKING_DIR/runner_releases
  binaries_artifacts:
    path: "runner_releases/*"
  before_cache_script: rm -rf $CARGO_HOME/registry/index

nightly_macos_task:
  only_if: $CIRRUS_CRON == 'nightly'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode:14.2
  matrix:
    - name: Native Build aarch64-apple-darwin
      alias: nightly_macos_aarch64
      env:
        TARGET: aarch64-apple-darwin
    - name: Native Build x86_64-apple-darwin
      alias: nightly_macos_x86_64
      env:
        TARGET: x86_64-apple-darwin
  submodules_script:
    # Init submodules
    - git -c url."https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/".insteadOf="git@github.com:" submodule update --init --recursive
  symlink_xcode_script:
    - ln -s /Applications/Xcode-14.2.0.app /Applications/Xcode.app
    - ls -alh /Applications/
  setup_script:
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable-$TARGET
  build_and_test_script:
    - source $HOME/.cargo/env
    - cargo build --release --verbose --target $TARGET
    - cargo test --release --verbose --target $TARGET
    - rm -rf $CIRRUS_WORKING_DIR/runner_releases && mkdir -p $CIRRUS_WORKING_DIR/runner_releases && cargo run --release --target $TARGET -p carton-runner-py --bin build_releases -- --output-path $CIRRUS_WORKING_DIR/runner_releases
  binaries_artifacts:
    path: "runner_releases/*"
